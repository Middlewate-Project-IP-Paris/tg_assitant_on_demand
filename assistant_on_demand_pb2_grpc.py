# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import assistant_on_demand_pb2 as assistant__on__demand__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class assistanceOnDemandStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getChannelMeta = channel.unary_unary(
                '/assistant_on_demand.assistanceOnDemand/getChannelMeta',
                request_serializer=assistant__on__demand__pb2.ChannelMetaRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.getPostStat = channel.unary_unary(
                '/assistant_on_demand.assistanceOnDemand/getPostStat',
                request_serializer=assistant__on__demand__pb2.PostStatRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.getChannelSubs = channel.unary_unary(
                '/assistant_on_demand.assistanceOnDemand/getChannelSubs',
                request_serializer=assistant__on__demand__pb2.ChannelSubsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.getPost = channel.unary_unary(
                '/assistant_on_demand.assistanceOnDemand/getPost',
                request_serializer=assistant__on__demand__pb2.PostRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.joinChannel = channel.unary_unary(
                '/assistant_on_demand.assistanceOnDemand/joinChannel',
                request_serializer=assistant__on__demand__pb2.InviteRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class assistanceOnDemandServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getChannelMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPostStat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getChannelSubs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def joinChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_assistanceOnDemandServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getChannelMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.getChannelMeta,
                    request_deserializer=assistant__on__demand__pb2.ChannelMetaRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'getPostStat': grpc.unary_unary_rpc_method_handler(
                    servicer.getPostStat,
                    request_deserializer=assistant__on__demand__pb2.PostStatRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'getChannelSubs': grpc.unary_unary_rpc_method_handler(
                    servicer.getChannelSubs,
                    request_deserializer=assistant__on__demand__pb2.ChannelSubsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'getPost': grpc.unary_unary_rpc_method_handler(
                    servicer.getPost,
                    request_deserializer=assistant__on__demand__pb2.PostRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'joinChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.joinChannel,
                    request_deserializer=assistant__on__demand__pb2.InviteRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'assistant_on_demand.assistanceOnDemand', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class assistanceOnDemand(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getChannelMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/assistant_on_demand.assistanceOnDemand/getChannelMeta',
            assistant__on__demand__pb2.ChannelMetaRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPostStat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/assistant_on_demand.assistanceOnDemand/getPostStat',
            assistant__on__demand__pb2.PostStatRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getChannelSubs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/assistant_on_demand.assistanceOnDemand/getChannelSubs',
            assistant__on__demand__pb2.ChannelSubsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/assistant_on_demand.assistanceOnDemand/getPost',
            assistant__on__demand__pb2.PostRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def joinChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/assistant_on_demand.assistanceOnDemand/joinChannel',
            assistant__on__demand__pb2.InviteRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
